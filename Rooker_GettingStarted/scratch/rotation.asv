% converting Vector XYZ to ENU matching the orientation of Aquadopp

% get aquadopp orietation
AQD = load("C:\Users\jkr6136\OneDrive - UNC-Wilmington\Kelp_data\data\Release1\raw\KELP1_AquadoppHR_raw.mat");

% get Vector data
Vector = load("C:\Users\jkr6136\OneDrive - UNC-Wilmington\Kelp_data\data\Release1\L0\KELP1_Vector_L0.mat");

AQD.heading = interp1(AQD.time, AQD.heading, Vector.time);
AQD.pitch = interp1(AQD.time, AQD.pitch, Vector.time);
AQD.roll = interp1(AQD.time, AQD.roll, Vector.time);

for i = 1:length(Vector.time)
    if  find(Vector.time >= AQD.time(1) & Vector.time <= AQD.time(end)
        Vector.east(i) = NaN;
        Vector.north(i) = NaN;        
        Vector.up(i) = NaN;
    else

        theta = AQD.heading(i) - 90;

        st = sind(theta);
        sp = sind(AQD.pitch(i));
        so = sind(AQD.roll(i));
        ct = cosd(theta);
        cp = cosd(AQD.pitch(i));
        co = cosd(AQD.roll(i));
        H =[ct st 0; -st ct 0; 0 0 1];
        P = [cp 0 -sp; 0 1 0; sp 0 cp];
        R = [1 0 0; 0 co -so; 0 so co];
        T = H*P*R;

        coords = [Vector.v1(i); Vector.v2(i); Vector.v3(i)];

        ENU = T * coords;

        Vector.east(i) = ENU(1);
        Vector.north(i) = ENU(2);
        Vector.up(i) = ENU(3);
    end
end